{"version":3,"sources":["assets/logo.png","components/Nav/Nav.jsx","assets/hero.png","components/Landing/Landing.jsx","components/Footer/Footer.jsx","components/TryAgain/TryAgain.jsx","components/ChallengeDetailCard/ChallengeDetailCard.jsx","components/TestLetter/TestLetter.jsx","components/TypingChallenge/TypingChallenge.jsx","components/TypingChallengeContainer/TypingChallengeContainer.jsx","components/TestContainer/TestContainer.jsx","components/ChallengeSection/ChallengeSection.jsx","components/App/App.jsx","index.js"],"names":["Nav","className","src","logo","alt","target","href","Landing","data-aos","options","strings","autoStart","loop","hero","Footer","rel","size","color","TryAgain","words","characters","wpm","startAgain","url","onClick","window","open","ChallengeDetailCard","cardname","cardvalue","TestLetter","characterinfo","letterstatus","notattempted","correct","incorrect","status","testletter","TypingChallenge","testInfo","timeRemaining","selectedparagraph","timeStarted","onInputchange","console","log","map","individulaletter","index","placeholder","onChange","e","value","TypingChallengeContainer","TestContainer","ChallengeSection","DefaultState","serviceurl","App","state","fetchNewParagraph","fetch","then","response","text","data","split","charselected","setState","startTimer","timer","setInterval","timespent","parseInt","clearInterval","handleInput","inputValue","length","testLetter","slice","isMistake","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66907ed6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React from 'react';\r\nimport logo from './../../assets/logo.png';\r\nimport './Nav.css';\r\n\r\nconst Nav=()=>{\r\n    return(\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <img className=\"flash-logo\" src={logo} alt=\"logo\" />\r\n                <p className=\"flash-logo-text\">FlashType</p>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n                <a className=\"code-link\" target=\"_blank\" href=\"https://github.com/jatinverma12/flashtype\">CODE</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/hero.96e141d3.png\";","import React from 'react';\r\nimport Typewriter from 'typewriter-effect';\r\nimport './Landing.css';\r\nimport hero from './../../assets/hero.png';\r\nconst Landing=()=>{\r\n    return(\r\n        <div className=\"landing-container\">\r\n            <div data-aos=\"fade-right\"className=\"landing-left\">\r\n                <h1 className=\"landing-header\">can you type?</h1>\r\n                <div className=\"typewriter-container\">\r\n                <Typewriter\r\n                options={{\r\n                    strings: ['Fast?', 'Correct?','Quick?'],\r\n                    autoStart: true,\r\n                    loop: true,\r\n                }}\r\n                />\r\n             </div>\r\n            </div>\r\n            <div data-aos=\"fade-left\" className=\"landing-right\">\r\n                <img  className=\"hero-image\" src={hero}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Landing;","\r\nimport React from 'react';\r\nimport './Footer.css';\r\nimport {AiFillInstagram,AiOutlineLinkedin,AiFillGithub} from 'react-icons/ai';\r\n\r\nconst Footer=()=>{\r\n    return(\r\n        <div className=\"footer-container\">\r\n            <a target=\"_blank\"  href=\"https://www.instagram.com/jatin_v99/\" rel=\"noreferrer\"><AiFillInstagram size=\"50px\" color=\"white\" /></a>\r\n            <a target=\"_blank\" href=\"https://www.linkedin.com/in/jatin-verma-352a87175/\" rel=\"noreferrer\"><AiOutlineLinkedin size=\"50px\" color=\"white\"/></a>\r\n            <a target=\"_blank\" href=\"https://github.com/jatinverma12\" rel=\"noreferrer\"><AiFillGithub size=\"50px\" color=\"white\"/></a>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from \"react\";\r\nimport \"./TryAgain.css\";\r\n\r\nconst TryAgain = ({ words, characters, wpm, startAgain }) => {\r\n    const url = \"theleanprogrammer.com\";\r\n    return (\r\n        <div data-aos=\"fade-up\" className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n\r\n            <div className=\"result-container\">\r\n                <p>\r\n                    <b>Characters:</b> {characters}\r\n                </p>\r\n                <p>\r\n                    <b>Words:</b> {words}\r\n                </p>\r\n                <p>\r\n                    <b>Speed</b> {wpm} wpm\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <button\r\n                    onClick={() => startAgain()}\r\n                    className=\"end-buttons start-again-btn\"\r\n                >\r\n                    Re-try\r\n                </button>\r\n                <button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://www.facebook.com/sharer/sharer.php?u=\" +\r\n                                url,\r\n                            \"facebook-share-dialog\",\r\n                            \"width=800,height=600\"\r\n                        )\r\n                    }\r\n                    className=\"end-buttons share-btn\"\r\n                >\r\n                    Share\r\n                </button>\r\n                <button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://twitter.com/intent/tweet?text=Check%20this%20out%20\" +\r\n                                url,\r\n                            \"Twitter\",\r\n                            \"width=800,height=600\"\r\n                        )\r\n                    }\r\n                    className=\"end-buttons tweet-btn\"\r\n                >\r\n                    Tweet\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TryAgain;","import React from 'react';\r\nimport './ChallengeDetailCard.css';\r\n\r\nconst ChallengeDetailCard=({cardname,cardvalue})=>{\r\n    return(\r\n        <div className=\"details-card-container\">\r\n            <div className=\"cardname\">{cardname}</div>\r\n            <div className=\"cardvalue\">{cardvalue}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ChallengeDetailCard;","import React from 'react';\r\nimport './TestLetter.css';\r\n\r\nconst TestLetter=({characterinfo})=>{\r\n    const letterstatus={\r\n        notattempted:\"test-letter-notattempted\",\r\n        correct:\"test-letter-correct\",\r\n        incorrect:\"test-letter-incorrect\"\r\n    }[characterinfo.status];\r\n    \r\n    //this dictionary will return rhs of the matched lhs from characterinfo.status\r\n    return(\r\n        <span className={`individual-char ${letterstatus}`}>{characterinfo.testletter}</span>\r\n    )\r\n}\r\nexport default TestLetter;","import React from 'react';\r\nimport TestLetter from './../TestLetter/TestLetter';\r\nimport './TypingChallenge.css';\r\nconst TypingChallenge=({testInfo,selectedparagraph,timeRemaining,timeStarted,onInputchange})=>{\r\n    console.log(testInfo);\r\n    return(\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                <p className=\"timer\">00:{timeRemaining>=10 ? timeRemaining : `0${timeRemaining}`}</p>\r\n                \r\n                <p className=\"timer-info\">{!timeStarted && \"Start typing to start the test\"}</p>\r\n            </div>\r\n            <div className=\"textarea-container\">\r\n                <div className=\"textarea-left\">\r\n                    <div className=\"textarea test-paragraph\">\r\n                        { testInfo.map((individulaletter,index)=>{\r\n                            return <TestLetter key={index} characterinfo={individulaletter} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"textarea-right\">\r\n                    <textarea className=\"textarea\" placeholder=\"Start typing here...\" onChange={(e)=>onInputchange(e.target.value)}>\r\n\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TypingChallenge;","import React from 'react';\r\nimport ChallengeDetailCard from './../ChallengeDetailCard/ChallengeDetailCard';\r\nimport TypingChallenge from './../TypingChallenge/TypingChallenge';\r\nimport './TypingChallengeContainer.css'\r\nconst TypingChallengeContainer=({onInputchange,testInfo,words,characters,wpm,timeStarted,timeRemaining,selectedparagraph})=>{\r\n    return(\r\n        <div className=\"typing-challenge-container\">\r\n            {/*Details section*/}\r\n            <div className=\"details-container\">\r\n                 {/*characters types */}\r\n                 <ChallengeDetailCard cardname={\"Words\"} cardvalue={words} />\r\n                {/*words typed*/}\r\n                <ChallengeDetailCard cardname={\"Characters\"} cardvalue={characters} />\r\n                {/*speed*/}\r\n                <ChallengeDetailCard cardname={\"Speed\"} cardvalue={wpm} />\r\n            </div>\r\n            \r\n            <div className=\"typewriter-container\">\r\n                {/*The real challenge*/}\r\n                <TypingChallenge testInfo={testInfo} selectedparagraph={selectedparagraph} \r\n                timeRemaining={timeRemaining} timeStarted={timeStarted}\r\n                onInputchange={onInputchange}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default TypingChallengeContainer;","import React from 'react';\r\nimport './TestContainer.css';\r\nimport TryAgain from './../TryAgain/TryAgain';\r\nimport TypingChallengeContainer from './../TypingChallengeContainer/TypingChallengeContainer';\r\nconst TestContainer=({startAgain,onInputchange,testInfo,selectedparagraph,words,characters,wpm,timeRemaining,timeStarted})=>{\r\n    return(\r\n        <div className=\"test-container\">\r\n            {\r\n                timeRemaining>0 ? (\r\n                    <div data-aos=\"fade-up\" className=\"typingchallenge-container\">\r\n                        <TypingChallengeContainer testInfo={testInfo} words={words} characters={characters} wpm={wpm} timeRemaining={timeRemaining} \r\n                        timeStarted={timeStarted} selectedparagraph={selectedparagraph} \r\n                        onInputchange={onInputchange}  />\r\n\r\n                    </div>\r\n                ):(\r\n                    <div className=\"tryagain-container\">\r\n                         <TryAgain words={words} characters={characters} wpm={wpm} startAgain={startAgain}/>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n           \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TestContainer;","import React from 'react';\r\nimport TestContainer from './../TestContainer/TestContainer';\r\nimport './ChallengeSection.css';\r\nconst ChallengeSection=({startAgain,onInputchange,selectedparagraph,words,characters,wpm,timeStarted,timeRemaining,testInfo})=>{\r\n    return(\r\n        <div className=\"challenge-section-container\">\r\n            <div data-aos=\"fade-down\" className=\"challenge-section-header\">\r\n                <h1>Take a speed test now</h1>\r\n                <TestContainer selectedparagraph={selectedparagraph} words={words} \r\n                characters={characters} wpm={wpm} timeStarted={timeStarted} \r\n                timeRemaining={timeRemaining} testInfo={testInfo}\r\n                onInputchange={onInputchange} startAgain={startAgain}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeSection;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './../Nav/Nav';\r\nimport Landing from './../Landing/Landing';\r\nimport Footer from './../Footer/Footer';\r\nimport ChallengeSection from './../ChallengeSection/ChallengeSection';\r\nconst totaltime=60;\r\nconst DefaultState={\r\n    selectedparagraph:\"\",\r\n    timeStarted:false,\r\n    timeRemaining:totaltime,\r\n    characters:0,\r\n    words:0,\r\n    wpm:0,\r\n    testInfo:[]\r\n};\r\nconst serviceurl=\"https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1&format=text\";\r\nclass App extends React.Component{\r\n    state=DefaultState;\r\n\r\n    fetchNewParagraph=()=>{\r\n        fetch(serviceurl)\r\n        .then(response=>response.text())\r\n        .then((data)=>{\r\n            const selectedparagraphArray=data.split(\"\");\r\n             const testInfo=selectedparagraphArray.map((charselected)=> {\r\n               return{\r\n                   testletter: charselected,\r\n                    status: \"notattempted\"\r\n                       \r\n               }\r\n\r\n           });\r\n         this.setState({...DefaultState,testInfo,selectedparagraph:data});\r\n        });\r\n    }\r\n    componentDidMount(){\r\n       this.fetchNewParagraph();\r\n    }\r\n\r\n    startTimer=()=>{\r\n        this.setState({timeStarted:true});\r\n        const timer=setInterval(()=>{\r\n            const timespent=totaltime-this.state.timeRemaining;\r\n            const wpm= timespent>0 ? ((this.state.words/timespent)*totaltime):0;\r\n            if(this.state.timeRemaining>0)\r\n            this.setState({timeRemaining:this.state.timeRemaining-1,wpm:parseInt(wpm)});\r\n            else\r\n            clearInterval(timer);\r\n        },1000);\r\n    }\r\n\r\n    startAgain=()=>{\r\n        this.fetchNewParagraph();\r\n    }\r\n    handleInput=(inputValue)=>{\r\n        if(!(this.state.timeStarted))\r\n        this.startTimer();\r\n\r\n         /**\r\n         * 1. Handle the underflow case - all characters should be shown as not-attempted\r\n         * 2. Handle the overflow case - early exit\r\n         * 3. Handle the backspace case\r\n         *      - Mark the [index+1] element as notAttempted\r\n         *        (irrespective of whether the index is less than zero)\r\n         *      - But, don't forget to check for the overflow here\r\n         *        (index + 1 -> out of bound, when index === length-1)\r\n         * 4. Update the status in test info\r\n         *      1. Find out the last character in the inputValue and it's index\r\n         *      2. Check if the character at same index in testInfo (state) matches\r\n         *      3. Yes -> Correct\r\n         *         No  -> Incorrect (Mistake++)\r\n         * 5. Irrespective of the case, characters, words and wpm can be updated\r\n         */\r\n\r\n          const characters = inputValue.length;\r\n          const words = inputValue.split(\" \").length;\r\n          const index = characters - 1;\r\n  \r\n          if (index < 0) {\r\n              this.setState({\r\n                  testInfo: [\r\n                      {\r\n                          testLetter: this.state.testInfo[0].testletter,\r\n                          status: \"notAttempted\",\r\n                      },\r\n                      ...this.state.testInfo.slice(1),\r\n                  ],\r\n                  characters,\r\n                  words,\r\n              });\r\n  \r\n              return;\r\n          }\r\n  \r\n          if (index >= this.state.selectedparagraph.length) {\r\n              this.setState({\r\n                  characters,\r\n                  words,\r\n              });\r\n              return;\r\n          }\r\n  \r\n          // Make a copy\r\n          const testInfo = this.state.testInfo;\r\n          if (!(index === this.state.selectedparagraph.length - 1))\r\n              testInfo[index + 1].status = \"notAttempted\";\r\n  \r\n          // Check for mistake\r\n          const isMistake = inputValue[index] === testInfo[index].testletter;\r\n  \r\n          // Update the testInfo\r\n          testInfo[index].status = isMistake ? \"correct\" : \"incorrect\";\r\n  \r\n          // Update the state\r\n          this.setState({\r\n              testInfo,\r\n              words,\r\n              characters,\r\n          });\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <Nav />\r\n                <Landing />\r\n                <ChallengeSection words={this.state.words} characters={this.state.characters} wpm={this.state.wpm}\r\n                timeStarted={this.state.timeStarted} timeRemaining={this.state.timeRemaining} \r\n                selectedparagraph={this.state.selectedparagraph} testInfo={this.state.testInfo}\r\n                onInputchange={this.handleInput} startAgain={this.startAgain}/>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nReactDOM.render(<App />,document.getElementById(\"root\"));"],"sourceRoot":""}